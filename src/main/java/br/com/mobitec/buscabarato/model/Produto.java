//
// This file was generated by the JPA Modeler
//
package br.com.mobitec.buscabarato.model;

import java.io.Serializable;
import java.util.Base64;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;

@Entity
@Table(name = "produto")
public class Produto implements Serializable {

    @Id
    @SequenceGenerator(name="produto_codigo_seq", sequenceName="produto_codigo_seq", allocationSize = 1)
    @GeneratedValue(generator="produto_codigo_seq", strategy=GenerationType.SEQUENCE)
    private Integer codigo;

    @Column(name = "descricao", table = "produto", nullable = false, length = 80)
    @Basic
    @NotNull(message = "A descrição do produto não pode ficar em branco")
    private String descricao;

    @Column(name = "medida", length = 30)
    @Basic
    private String medida;

    /*@ManyToMany(targetEntity = Marca.class)
    @JoinTable(name = "marca_produto", joinColumns = {
        @JoinColumn(name = "cod_marca", table = "marca_produto")}, inverseJoinColumns = {
        @JoinColumn(name = "cod_produto", table = "marca_produto")})
    private List<Marca> marcas;*/
    @ManyToOne(targetEntity = Marca.class, fetch=FetchType.EAGER)
    @JoinColumn(name = "cod_marca")
    @NotNull(message = "A marca não pode ficar em branco")
    private Marca marca;

    @OneToMany(targetEntity = TabelaPreco.class, mappedBy = "produto")
    private List<TabelaPreco> tabelaPrecoCollection;

    @Lob @Basic(fetch = FetchType.EAGER)
    private byte[] imagem;
    
    @Transient
    private String descricaoCompleta;
        
    public Produto() {

    }

    public Integer getCodigo() {
        return this.codigo;
    }

    public void setCodigo(Integer codigo) {
        this.codigo = codigo;
    }

    public String getDescricao() {
        return this.descricao;
    }

    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }
    
    public String getMedida() {
        return this.medida;
    }

    public void setMedida(String medida) {
        this.medida = medida;
    }
    
    public Marca getMarca() {
        return this.marca;
    }

    public void setMarca(Marca marca) {
        this.marca = marca;
    }

    public List<TabelaPreco> getTabelaPrecoCollection() {
        return this.tabelaPrecoCollection;
    }

    public void setTabelaPrecoCollection(List<TabelaPreco> tabelaPrecoCollection) {
        this.tabelaPrecoCollection = tabelaPrecoCollection;
    }

    /**
     * @return the imagem
     */
    public byte[] getImagem() {
        return imagem;
    }

    /**
     * @param imagem the imagem to set
     */
    public void setImagem(byte[] imagem) {
        this.imagem = imagem;
    }
    
    /**
     * Retorna a imamge na base 64
     * @return 
     */
    public String getImagemBase64() {
        if(imagem != null)        
            return Base64.getEncoder().encodeToString(imagem);
        return "";
    }

    /**
     * Retorna a descrição completa do produto
     * @return 
     */
    public String getDescricaoCompleta() {
        return this.getDescricao() + " "+ this.getMedida();
    }
    
    /**
     * @param descricaoCompleta the descricaoCompleta to set
     */
    public void setDescricaoCompleta(String descricaoCompleta) {
        //this.descricaoCompleta = descricaoCompleta;
    }
    
    
}
